{"version":3,"file":"static/js/961.c341146d.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.jsx","service/ApiServiceFetch.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\n\nexport const Loader = () => {\n  return <p>Loading...</p>;\n};\n","import { Suspense } from 'react';\nimport { fetchInfoMovies } from '../../service/ApiServiceFetch';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport { StyledLink } from '../../components/Header/Header.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nfunction MovieDetails() {\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  const fromRef = useRef(location?.state?.from);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetchInfoMovies(movieId);\n\n        setSelectedMovie(response);\n      } catch (error) {\n        console.log('error :>> ', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  function getGenres() {\n    const result = selectedMovie.genres.map(genre => genre.name);\n    return result.join(', ');\n  }\n\n  return (\n    selectedMovie && (\n      <main>\n        <h1>{selectedMovie.title || selectedMovie.name}</h1>\n\n        <img\n          alt={selectedMovie.title || selectedMovie.title}\n          src={`http://image.tmdb.org/t/p/w500${selectedMovie.poster_path}`}\n        />\n        <StyledLink to={fromRef.current} state={{ from: location }}>\n          Go Back\n          {isLoading && <Loader />}\n        </StyledLink>\n\n        <StyledLink to={'cast'} state={{ from: location }}>\n          Casts\n        </StyledLink>\n        <StyledLink to={'reviews'} state={{ from: location }}>\n          Reviews\n        </StyledLink>\n\n        <div>\n          <span>{selectedMovie.vote_average.toFixed(2)}</span>\n        </div>\n        <h3>Release date: {selectedMovie.release_date}</h3>\n        <h4>Geners: {getGenres()}</h4>\n        <h2>Overview</h2>\n        <p>Users Score: {selectedMovie.overview}</p>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </main>\n    )\n  );\n}\nexport default MovieDetails;\n","const API_KEY = '631075854851454119cb09d20165cf60';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n//? список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    return await response.json();\n  } catch (error) {}\n};\n\n//?  пошук фільму за ключовим словом на сторінці фільмів.\n\nexport const fetchMoviesSearch = async search => {\n  try {\n    const response = await fetch(\n      `\n${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${search}`\n    );\n    return await response.json();\n  } catch (error) {}\n};\n\n// ? запит повної інформації про фільм для сторінки кінофільму.\n\nexport const fetchInfoMovies = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return await response.json();\n  } catch (error) {}\n};\n\n// ? запит інформації про акторський склад для сторінки кінофільму.\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await fetch(`\n${BASE_URL}/movie/${movieId}/credits?&api_key=${API_KEY}&language=en-US`);\n    return await response.json();\n  } catch (error) {}\n};\n\n// ? запит оглядів для сторінки кінофільму.\n\nexport const fetchMoviesReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return await response.json();\n  } catch (error) {}\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Loader","useState","selectedMovie","setSelectedMovie","movieId","useParams","isLoading","setIsLoading","location","useLocation","fromRef","useRef","state","from","useEffect","fetchMovies","fetchInfoMovies","response","console","log","title","name","alt","src","poster_path","to","current","vote_average","toFixed","release_date","genres","map","genre","join","overview","Suspense","fallback","API_KEY","BASE_URL","fetchTrendingMovies","fetch","json","fetchMoviesSearch","search","fetchMovieCredits","fetchMoviesReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}